<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Snail-z Notes</title>
  <subtitle>书山有路勤为径，学海无涯苦作舟</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://note.snail-z.me/"/>
  <updated>2017-03-18T03:34:42.000Z</updated>
  <id>http://note.snail-z.me/</id>
  
  <author>
    <name>Snail-z</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS源码学习 - KVOController</title>
    <link href="http://note.snail-z.me/2017/03/18/iOS%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-KVOController/"/>
    <id>http://note.snail-z.me/2017/03/18/iOS源码学习-KVOController/</id>
    <published>2017-03-18T03:28:30.000Z</published>
    <updated>2017-03-18T03:34:42.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="技术" scheme="http://note.snail-z.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="http://note.snail-z.me/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://note.snail-z.me/tags/Objective-C/"/>
    
      <category term="源码学习" scheme="http://note.snail-z.me/tags/%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>CADisplayLink学习笔记</title>
    <link href="http://note.snail-z.me/2017/03/17/CADisplayLink%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://note.snail-z.me/2017/03/17/CADisplayLink学习笔记/</id>
    <published>2017-03-17T14:21:32.000Z</published>
    <updated>2017-03-18T04:13:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>CADisplayLink相当于一个定时器，比起NSTimer，它可以确保系统渲染每一帧的时候我们的方法都被调用，从而保证了动画的流畅性。<br>iOS设备的屏幕刷新频率是固定的，CADisplayLink在正常情况下会在每次刷新结束都被调用，精确度相当高。NSTimer的精确度相对显得较低；CADisplayLink使用场合相对专一，适合做UI的不停重绘，比如自定义动画引擎或者视频播放的渲染。NSTimer的使用范围要广泛的多，各种需要单次或者循环定时处理的任务都可以使用。<br><a id="more"></a></p>
<h3 id="相关属性"><a href="#相关属性" class="headerlink" title="相关属性"></a>相关属性</h3><ol>
<li><code>preferredFramesPerSecond</code> （iOS10用这个方法）<br>标识每秒钟调用几次，比如每秒钟调用10次，那就是每0.1秒调用一次</li>
<li><code>frameInterval</code>（ios10被弃用）<br>标识间隔多少帧调用一次selector方法。<br>CADisplayLink的selector每秒调用次数 = 60 / frameInterval。<br>苹果文档中还提到：如果应用不能及时提供显示帧，则应该降低帧率，可以通过增大 frameInterval 这一属性的值来降低动画帧率。frameInterval 默认值为 1，表示每帧都回调一次selector。在没有卡顿时，iOS 设备屏幕显示每秒刷新60次，意味着 frameInterval 为默认值时，每秒回调60次 selector，当frameInterval 改为2时，每秒回调30（60/2）次 selector。</li>
<li><code>duration</code><br>只读的CFTimeInterval值，提供每帧之间的时间，也就是屏幕每次刷新的时间。</li>
<li><code>timestamp</code><br>只读的CFTimeInterval值，表示屏幕显示的上一帧的时间戳，这个属性通常被target用来计算下一帧中应该显示的内容。</li>
<li><code>paused</code><br>通过设置paused属性为YES可以暂停selector调用，默认值NO</li>
</ol>
<blockquote>
<p>注: CADisplayLink是不能被继承的</p>
</blockquote>
<h3 id="使用CADisplayLink"><a href="#使用CADisplayLink" class="headerlink" title="使用CADisplayLink"></a>使用CADisplayLink</h3><p>在应用中创建一个新的CADisplayLink 对象，把它添加到一个runloop中，并给他提供一个 target和select在屏幕刷新的时候调用。如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)startDisplayLink &#123;</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">self</span>.displayLink == <span class="literal">nil</span>) &#123;  </div><div class="line">        <span class="keyword">self</span>.displayLink = [<span class="built_in">CADisplayLink</span> displayLinkWithTarget:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(updateLayout)];  </div><div class="line">        [<span class="keyword">self</span>.displayLink addToRunLoop:[<span class="built_in">NSRunLoop</span> currentRunLoop] forMode:<span class="built_in">NSDefaultRunLoopMode</span>];  </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)stopDisplayLink &#123;</div><div class="line">	<span class="comment">// 结束一个CADisplayLink，应该调用 - invalidate 从runloop中删除并删除之前绑定的 target跟selector</span></div><div class="line">	[<span class="keyword">self</span>.displayLink invalidate];</div><div class="line">	<span class="keyword">self</span>.displayLink = <span class="literal">nil</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">void</span>)updateLayout &#123;</div><div class="line">	<span class="comment">// do something</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>CADisplaylink 与 NSTimer 类似，都可以以一定的时间间隔触发回调 selector，不同点在于 CADisplaylink 的时间间隔是与屏幕的刷新频率相关联的，这一点决定了 CADisplaylink 的应用多与显示有关。</p>
</blockquote>
<h3 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h3><ul>
<li>当scrollview / tableview滚动时CADisplayLink停止响应。<br>要解决这个问题需要简单了解一下runloop的知识，runloop可以理解为cocoa下的一种消息循环机制，用来处理各种消息事件，我们在开发的时候并不需要手动去创建一个runloop，因为框架为我们创建了一个默认的runloop,通过[NSRunloop currentRunloop]可以得到一个当前线程下面对应的runloop对象，不过需要注意的是不同的runloop之间消息的通知方式。在开启一个NSTimer或CADisplayLink实质上是在当前的runloop中注册了一个新的事件源，而当scrollView滚动的时候，当前的MainRunLoop是处于UITrackingRunLoopMode的模式下，在这个模式下是不会处理NSDefaultRunLoopMode的消息(因为RunLoop Mode不一样)，要想在scrollView滚动的同时也接受其它runloop的消息，就不能将Mode参数设置为NSDefaultRunLoopMode，而应该设置为NSRunLoopCommonModes。</li>
</ul>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://www.jianshu.com/p/c35a81c3b9eb" target="_blank" rel="external">CADisplayLink</a></li>
<li><a href="http://kittenyang.com/cadisplaylinkanduibezierpath/" target="_blank" rel="external">CADisplayLink结合UIBezierPath的神奇妙用</a></li>
<li><a href="http://tech.glowing.com/cn/usage-of-cadisplaylink/" target="_blank" rel="external">使用CADisplayLink实现果冻效果动画</a></li>
<li><a href="http://www.cnblogs.com/zhouxihi/p/6255669.html" target="_blank" rel="external">Objective-C三种定时器CADisplayLink / NSTimer / GCD的使用</a></li>
<li><a href="http://icetime17.github.io/2015/12/23/2015-12/iOS-%E4%BD%BF%E7%94%A8CADisplayLink%E6%9D%A5%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/" target="_blank" rel="external">iOS - 使用CADisplayLink来实现定时任务</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CADisplayLink相当于一个定时器，比起NSTimer，它可以确保系统渲染每一帧的时候我们的方法都被调用，从而保证了动画的流畅性。&lt;br&gt;iOS设备的屏幕刷新频率是固定的，CADisplayLink在正常情况下会在每次刷新结束都被调用，精确度相当高。NSTimer的精确度相对显得较低；CADisplayLink使用场合相对专一，适合做UI的不停重绘，比如自定义动画引擎或者视频播放的渲染。NSTimer的使用范围要广泛的多，各种需要单次或者循环定时处理的任务都可以使用。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://note.snail-z.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="http://note.snail-z.me/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://note.snail-z.me/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>2017我在北京</title>
    <link href="http://note.snail-z.me/2017/03/16/2017%E6%88%91%E5%9C%A8%E5%8C%97%E4%BA%AC/"/>
    <id>http://note.snail-z.me/2017/03/16/2017我在北京/</id>
    <published>2017-03-15T16:18:53.000Z</published>
    <updated>2017-03-17T07:39:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="骑行"><a href="#骑行" class="headerlink" title="骑行"></a>骑行</h4><p>这是我们在北京的第一次骑行————永定河森林公园骑行。记得当年自己在上海骑车去看灰姑娘，电影结束后大雨滂沱，我没有王子，于是独自享受着在异乡的大雨中骑行，那时的我，那时的自行车，那时的伙伴，那时候的复旦，同济！我相信我还会继续在路上。<br><a id="more"></a></p>
<h4 id="藏身柳暗花明处"><a href="#藏身柳暗花明处" class="headerlink" title="藏身柳暗花明处"></a>藏身柳暗花明处</h4><p>来到北京后，我们在吵杂中用心感受这座城市，在它的怀抱中穿梭，有时候徒步，有时候骑行，有时候静静地坐在公交车上让眼睛悄悄地映着穿流的一切。玉渊潭的樱花，钓鱼台的银杏，香山的红叶，奥林匹克森林公园醉人的氧气！再怎么快节奏的生活，都会在这样的环境下慢下脚步，真心的想好好的过日子。</p>
<h4 id="逛京城"><a href="#逛京城" class="headerlink" title="逛京城"></a>逛京城</h4><p>西单，王府井，崇文门，国贸，三里屯，蓝色港湾，望京798，中关村，五道口，南锣鼓巷，雍和宫，簋街，立水桥，奥林匹克公园，故宫，长城等。我在这些地方留下了我的足迹。无论在哪里都离不开吃喝住行，在北京的吃喝住行还算是便利的，虽然南北有差异，但是在北京的生活并不让我排斥。</p>
<h4 id="谋生术"><a href="#谋生术" class="headerlink" title="谋生术"></a>谋生术</h4><p>工作就是做自己喜欢做的事情————敲代码。我喜欢做的事情很多，看书，画画，设计，总结一句就是看到美好的事物总是心生向往，想去触碰它。敲代码是一件我已经做了快4年的事情了。不是什么高手级别的，只是一年比一年对它更加熟悉，更加了解它，更想去了解它的点滴。对于想去了解它的动机也越来越单纯。它不再是一个用来挣钱养活自己的利器，而是它更加具有魅力，让我更想追寻着它奔跑。有人说追着累，而我有时候感觉看着它发展也挺高兴的。跟着它的脚步看它在未来某个时候蜕变或是变得消声觅迹也是一种心灵上的安慰。在这个互联网的时代，遍地是码农的时代，我只想做好自己，保持学习，分享的心态。</p>
<h4 id="流浪四海"><a href="#流浪四海" class="headerlink" title="流浪四海"></a>流浪四海</h4><p>曾经畅想过很多次我的老年生活————我希望到了某个年纪，有诗和远方。人总是喜欢用各种方式满足自己的好奇心。以前的生活很慢，慢得一生只够爱一个人。现在的生活很快，快到现在我在北京，晚上我估计已经在厦门和朋友聚餐了。这样的航空条件，还有当今的多媒体，让我们对整个国家乃至整个地球有了即视感。巴西的热带丛林，澳洲夏天的圣诞节，斯里兰卡的海岸线，欧洲的古老建筑，纽约的Open。我很想去亲身体验一下。想想这些场景，自己心里美滋滋的，脸上也洋溢的微笑，感觉棒棒的。这是我不敲代码想做的事情。(我会努力的带你走遍世界的每个角落~~)</p>
<p>— <a href="http://www.jianshu.com/p/17321419e238" target="_blank" rel="external">小鸿子的随笔</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;骑行&quot;&gt;&lt;a href=&quot;#骑行&quot; class=&quot;headerlink&quot; title=&quot;骑行&quot;&gt;&lt;/a&gt;骑行&lt;/h4&gt;&lt;p&gt;这是我们在北京的第一次骑行————永定河森林公园骑行。记得当年自己在上海骑车去看灰姑娘，电影结束后大雨滂沱，我没有王子，于是独自享受着在异乡的大雨中骑行，那时的我，那时的自行车，那时的伙伴，那时候的复旦，同济！我相信我还会继续在路上。&lt;br&gt;
    
    </summary>
    
      <category term="我和她" scheme="http://note.snail-z.me/categories/%E6%88%91%E5%92%8C%E5%A5%B9/"/>
    
    
      <category term="我和她" scheme="http://note.snail-z.me/tags/%E6%88%91%E5%92%8C%E5%A5%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客使用笔记</title>
    <link href="http://note.snail-z.me/2017/03/15/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>http://note.snail-z.me/2017/03/15/Hexo静态博客搭建笔记/</id>
    <published>2017-03-15T14:59:29.000Z</published>
    <updated>2017-03-18T03:34:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 是一个基于 <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> 的静态博客程序，可以方便的生成静态网页托管在 <a href="https://github.com/" target="_blank" rel="external">GitHub</a> 和 <a href="https://www.heroku.com/" target="_blank" rel="external">Heroku</a> 上。作者是来自台湾的 <a href="https://github.com/hexojs/hexo" target="_blank" rel="external">tommy351</a>。<br>关于hexo静态网页搭建过程本文不再赘述，网上教程很多，本篇末尾也有相应的网络链接供参考。本文只是简单记录下使用hexo中的一些问题和需求更改。<br><a id="more"></a></p>
<h3 id="关联Github仓库"><a href="#关联Github仓库" class="headerlink" title="关联Github仓库:"></a>关联Github仓库:</h3><p>在hexo根目录下的 _config.yml 文件配置，末尾添加如下信息<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">deploy:</span></div><div class="line">  <span class="symbol">type:</span> git</div><div class="line">  <span class="symbol">repository:</span> <span class="comment"># 你的 GitHub 仓库地址，别忘了加上 .git （我的是https://github.com/snail-z/snail-z.github.io.git）</span></div><div class="line">  <span class="symbol">branch:</span> master</div></pre></td></tr></table></figure></p>
<p>注意，配置文件的冒号后必须有一个空格。deploy 下面的每个字段前必须空两个空格，严格要求。</p>
<p>然后执行命令：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate <span class="comment"># 生成静态页面，可以简化为 hexo g</span></div><div class="line">hexo deploy   <span class="comment"># 部署到 GitHub，可以简化为 hexo d</span></div></pre></td></tr></table></figure></p>
<p>浏览器访问 <a href="https://snail-z.github.io" target="_blank" rel="external">snail-z.github.io</a> 就能看到自己的 Blog 了，如果看到 404 页面不要惊慌，一般延迟半分钟左右才能看到效果。耐心等待。</p>
<hr>
<h3 id="添加网页背景图"><a href="#添加网页背景图" class="headerlink" title="添加网页背景图"></a>添加网页背景图</h3><p> 为网页增加 header body footer 的背景图，具体做法是在<code>hexo/themes/next/source/css/_custom/</code>里的custom.styl修改如下：<br> <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#header &#123;</div><div class="line">    background: url("../images/background-header.jpg");</div><div class="line">    background-size: cover;</div><div class="line">&#125;</div><div class="line">body &#123;</div><div class="line">    background: url("../images/background-body.jpg");</div><div class="line">    background-size: cover;</div><div class="line">&#125;</div><div class="line">#footer &#123;</div><div class="line">    background: url("../images/background-footer.jpg");</div><div class="line">    background-size: cover;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 将上述中的图片放到<code>hexo/themes/next/source/images</code>中即可。</p>
<hr>
<h3 id="创建标签云页面和分类页面"><a href="#创建标签云页面和分类页面" class="headerlink" title="创建标签云页面和分类页面"></a>创建标签云页面和分类页面</h3><ul>
<li>添加标签云页面，并在menu中显示。</li>
</ul>
<ol>
<li><p>新建一个页面，命名为 tags 。命令如下</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"tags"</span></div></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面，在<code>hexo/source/tags</code>下的index.md文件中，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#title: All tags # 一般省略标题</span></div><div class="line"><span class="symbol">date:</span> <span class="number">2017</span>-<span class="number">3</span>-<span class="number">17</span> <span class="number">9</span><span class="symbol">:</span><span class="number">21</span><span class="symbol">:</span><span class="number">20</span></div><div class="line"><span class="symbol">type:</span> <span class="string">"tags"</span></div><div class="line"><span class="symbol">comments:</span> <span class="literal">false</span> <span class="comment"># 如果有启用多说评论，默认页面也会带有评论。需要关闭的话，添加字段comments设为false</span></div></pre></td></tr></table></figure>
</li>
<li><p>设置menu。编辑主题的_config.yml，添加tags到menu中，如下:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">menu:</span></div><div class="line">  <span class="symbol">home:</span> /</div><div class="line">  <span class="symbol">archives:</span> /archives</div><div class="line">  <span class="symbol">tags:</span> /tags</div></pre></td></tr></table></figure>
</li>
<li><p>写文章时添加对应标签，例如本篇：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">title:</span> Hexo静态博客使用笔记</div><div class="line"><span class="symbol">date:</span> <span class="number">2017</span>-<span class="number">03</span>-<span class="number">15</span> <span class="number">22</span><span class="symbol">:</span><span class="number">59</span><span class="symbol">:</span><span class="number">29</span></div><div class="line"><span class="symbol">categories:</span>               <span class="comment"># 文章分类目录，可省略</span></div><div class="line">    - 技术</div><div class="line"><span class="symbol">tags:</span> Hexo</div><div class="line">---</div></pre></td></tr></table></figure>
<p>以上云标签就创建成功了，可以运行查看效果了。</p>
</li>
</ol>
<ul>
<li>添加分类页面</li>
</ul>
<ol>
<li><p>步骤与添加tags类似，首先新建一个页面，命名为 categories，如下：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page <span class="string">"categories"</span></div></pre></td></tr></table></figure>
</li>
<li><p>同样编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">date:</span> <span class="number">2017</span>-<span class="number">03</span>-<span class="number">17</span> 09<span class="symbol">:</span><span class="number">25</span><span class="symbol">:</span><span class="number">20</span></div><div class="line"><span class="symbol">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="symbol">comments:</span> <span class="literal">false</span></div></pre></td></tr></table></figure>
</li>
<li><p>在菜单中添加链接。编辑主题的 _config.yml ，将 menu 中的 categories: /categories 注释去掉，如下:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">menu:</span></div><div class="line">  <span class="symbol">home:</span> /</div><div class="line">  <span class="symbol">categories:</span> /categories</div><div class="line">  <span class="symbol">archives:</span> /archives</div><div class="line">  <span class="symbol">tags:</span> /tags</div></pre></td></tr></table></figure>
<p>以上分类页面就创建成功了，打开博客查看效果吧。</p>
</li>
</ol>
<hr>
<h3 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h3><ul>
<li><a href="https://note.leodev.me/2016/09/01/Hexo-3-1-1-Staic-Blog-Build-Guide/" target="_blank" rel="external">Hexo 3.1.1 静态博客搭建指南</a></li>
<li><a href="http://baixin.io/2015/08/HEXO搭建个人博客/" target="_blank" rel="external">HEXO搭建个人博客</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><a href="http://oakland.github.io/2016/04/30/hexo-%E5%A6%82%E4%BD%95%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E3%80%81%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0/" target="_blank" rel="external">hexo如何更换主题、删除文章</a></li>
<li><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Markdown 使用</a></li>
<li><a href="http://www.yaosansi.com/post/markdown-on-github/" target="_blank" rel="external">GitHub上Markdown基本使用</a></li>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo 使用文档</a></li>
<li><a href="http://theme-next.iissnan.com" target="_blank" rel="external">NexT 使用文档</a></li>
<li><a href="http://zhouhuix.cn/2016/11/24/%E4%BF%AE%E6%94%B9Hexo%E7%9A%84Next%E4%B8%BB%E9%A2%98/" target="_blank" rel="external">修改Hexo的Next主题</a></li>
<li><a href="https://www.fengyu.info/blog/2016/06/30/hexo-theme-next-modify/" target="_blank" rel="external">Hexo Next主题修改与优化 – 基础篇</a></li>
<li><a href="http://www.wuxubj.cn/2016/08/Hexo-nexT-build-personal-blog/" target="_blank" rel="external">Hexo+nexT主题搭建个人博客</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/wiki" target="_blank" rel="external">hexo-theme-next wiki</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; 是一个基于 &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; 的静态博客程序，可以方便的生成静态网页托管在 &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; 和 &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; 上。作者是来自台湾的 &lt;a href=&quot;https://github.com/hexojs/hexo&quot;&gt;tommy351&lt;/a&gt;。&lt;br&gt;关于hexo静态网页搭建过程本文不再赘述，网上教程很多，本篇末尾也有相应的网络链接供参考。本文只是简单记录下使用hexo中的一些问题和需求更改。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://note.snail-z.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Hexo" scheme="http://note.snail-z.me/tags/Hexo/"/>
    
  </entry>
  
</feed>
